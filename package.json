{
  "name": "n8n-mcp",
  "version": "2.15.2",
  "description": "Integration between n8n workflow automation and Model Context Protocol (MCP)",
  "main": "dist/index.js",
  "bin": {
    "n8n-mcp": "./dist/mcp/index.js"
  },
  "scripts": {
    "build": "tsc -p tsconfig.build.json",
    "rebuild:optimized": "node dist/scripts/rebuild-optimized.js",
    "validate": "node dist/scripts/validate.js",
    "test-nodes": "node dist/scripts/test-nodes.js",
    "start": "node dist/mcp/index.js",
    "start:http": "MCP_MODE=http node dist/mcp/index.js",
    "start:http:fixed": "MCP_MODE=http USE_FIXED_HTTP=true node dist/mcp/index.js",
    "start:n8n": "N8N_MODE=true MCP_MODE=http node dist/mcp/index.js",
    "http": "npm run build && npm run start:http:fixed",
    "dev": "npm run build && npm run validate",
    "dev:http": "MCP_MODE=http nodemon --watch src --ext ts --exec 'npm run build && npm run start:http'",
    "test:single-session": "./scripts/test-single-session.sh",
    "test:mcp-endpoint": "node scripts/test-mcp-endpoint.js",
    "test:mcp-endpoint:curl": "./scripts/test-mcp-endpoint.sh",
    "test:mcp-stdio": "npm run build && node scripts/test-mcp-stdio.js",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:ci": "vitest run --coverage --coverage.thresholds.lines=0 --coverage.thresholds.functions=0 --coverage.thresholds.branches=0 --coverage.thresholds.statements=0 --reporter=default --reporter=junit",
    "test:watch": "vitest watch",
    "test:unit": "vitest run tests/unit",
    "test:integration": "vitest run --config vitest.config.integration.ts",
    "test:integration:n8n": "vitest run tests/integration/n8n-api",
    "test:cleanup:orphans": "tsx tests/integration/n8n-api/scripts/cleanup-orphans.ts",
    "test:e2e": "vitest run tests/e2e",
    "lint": "tsc --noEmit",
    "typecheck": "tsc --noEmit",
    "update:n8n": "node scripts/update-n8n-deps.js",
    "update:n8n:check": "node scripts/update-n8n-deps.js --dry-run",
    "prebuild:fts5": "npx tsx scripts/prebuild-fts5.ts",
    "test:protocol-negotiation": "npx tsx src/scripts/test-protocol-negotiation.ts",
    "test:workflow-validation": "node dist/scripts/test-workflow-validation.js",
    "test:essentials": "node dist/scripts/test-essentials.js",
    "test:mcp-tools": "node dist/scripts/test-mcp-tools.js",
    "test:n8n-manager": "node dist/scripts/test-n8n-manager-integration.js",
    "test:n8n-validate-workflow": "node dist/scripts/test-n8n-validate-workflow.js",
    "test:typeversion-validation": "node dist/scripts/test-typeversion-validation.js",
    "test:error-handling": "node dist/scripts/test-error-handling-validation.js",
    "test:workflow-diff": "node dist/scripts/test-workflow-diff.js",
    "test:transactional-diff": "node dist/scripts/test-transactional-diff.js",
    "test:tools-documentation": "node dist/scripts/test-tools-documentation.js",
    "test:url-configuration": "npm run build && ts-node scripts/test-url-configuration.ts",
    "test:search-improvements": "node dist/scripts/test-search-improvements.js",
    "test:fts5-search": "node dist/scripts/test-fts5-search.js",
    "migrate:fts5": "node dist/scripts/migrate-nodes-fts.js",
    "test:mcp:update-partial": "node dist/scripts/test-mcp-n8n-update-partial.js",
    "test:update-partial:debug": "node dist/scripts/test-update-partial-debug.js",
    "test:issue-45-fix": "node dist/scripts/test-issue-45-fix.js",
    "test:auth-logging": "tsx scripts/test-auth-logging.ts",
    "test:docker": "./scripts/test-docker-config.sh all",
    "test:docker:unit": "./scripts/test-docker-config.sh unit",
    "test:docker:integration": "./scripts/test-docker-config.sh integration",
    "test:docker:security": "./scripts/test-docker-config.sh security",
    "sanitize:templates": "node dist/scripts/sanitize-templates.js",
    "db:rebuild": "node dist/scripts/rebuild-database.js",
    "benchmark": "vitest bench --config vitest.config.benchmark.ts",
    "benchmark:watch": "vitest bench --watch --config vitest.config.benchmark.ts",
    "benchmark:ui": "vitest bench --ui --config vitest.config.benchmark.ts",
    "benchmark:ci": "CI=true node scripts/run-benchmarks-ci.js",
    "db:init": "node -e \"new (require('./dist/services/sqlite-storage-service').SQLiteStorageService)(); console.log('Database initialized')\"",
    "docs:rebuild": "ts-node src/scripts/rebuild-database.ts",
    "sync:runtime-version": "node scripts/sync-runtime-version.js",
    "update:readme-version": "node scripts/update-readme-version.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/raulsaavedra/n8n-mcp.git"
  },
  "keywords": [
    "n8n",
    "mcp",
    "model-context-protocol",
    "ai",
    "workflow",
    "automation"
  ],
  "author": "Raul Saavedra",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/raulsaavedra/n8n-mcp/issues"
  },
  "homepage": "https://github.com/raulsaavedra/n8n-mcp#readme",
  "files": [
    "dist/**/*",
    "data/nodes.db",
    ".env.example",
    "README.md",
    "LICENSE",
    "package.runtime.json"
  ],
  "devDependencies": {
    "@faker-js/faker": "^9.9.0",
    "@testing-library/jest-dom": "^6.6.4",
    "@types/better-sqlite3": "^7.6.13",
    "@types/express": "^5.0.3",
    "@types/node": "^22.15.30",
    "@types/ws": "^8.18.1",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/runner": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "axios": "^1.11.0",
    "axios-mock-adapter": "^2.1.0",
    "fishery": "^2.3.1",
    "msw": "^2.10.4",
    "nodemon": "^3.1.10",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "vitest": "^3.2.4"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.13.2",
    "@n8n/n8n-nodes-langchain": "^1.112.2",
    "@supabase/supabase-js": "^2.57.4",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "lru-cache": "^11.2.1",
    "n8n": "^1.113.3",
    "n8n-core": "^1.112.1",
    "n8n-workflow": "^1.110.0",
    "openai": "^4.77.0",
    "sql.js": "^1.13.0",
    "uuid": "^10.0.0",
    "zod": "^3.24.1"
  },
  "optionalDependencies": {
    "@rollup/rollup-darwin-arm64": "^4.50.0",
    "@rollup/rollup-linux-x64-gnu": "^4.50.0",
    "better-sqlite3": "^11.10.0"
  },
  "overrides": {
    "pyodide": "0.26.4"
  }
}
